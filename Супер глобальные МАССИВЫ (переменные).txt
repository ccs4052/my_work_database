
----------------СУПЕР ГЛОБАЛЬНЫЕ ПЕРЕМЕННЫЕ
Константа создаеться один ран  и ее имя нельзя изменить

define('CON','Привет, мир') - константа регистро зависима (пишеться большими буквами)
echo CON;






ГЛОБАЛЬНЫЕ (массивы)  :
$_GET;
$_POST;
	
	$_GET['id']=(int)$_GET['id'] - делаем что-бы вводились целые числа
	
	---
	$_GET['money'] = (float)$_GET['money']; //555111,22fdfdf - фильтрует входящие данніе на числа ( с плавающей запятой)
	echo $_GET['money']; // 555111,22






$_FILES;  - В нее попадает все что содержиться в  <input type="file">
Отправка файлов только через метод POST

		ВСЯ Изнормация которая прикодит при загрузке файла попадет в массив $_FILES
		$_FILES['userfile']
		Первая ячейка это поле через которое отправили файл и в ней лежит еще 5 ячеек с характеристиками файла
		$_FILES['userfile']['name']      //имя файла
		$_FILES['userfile']['tmp_name'] //временный путь где лежит файл и временное имя файла
		$_FILES['userfile']['size']     // размер
		$_FILES['userfile']['type']     // тип
		$_FILES['userfile']['error']     // ошибки показивает
	
		
	

		<form action="home.php?page=contacts" method="post">
		<input type="text" name="login">
		<input type="file" name="file">
		
$_REQUEST - Дубль от $_GET и $_POST - Этой глобальной переменной пользуються очень редко
$_REQUEST = array(
	'page' <= $_GET
	'login' <= $_POST
	)
	
$_SERVER;
 print_r($_SERVER) ------  //эта супер глобальная переменная массив с кучей настроек на компьютере которые можно использывать
 echo $_SERVER['HTTP_HOST'];
 
	---if($_SERVER['REMOTE_ADDR']=='127.0.0.1'){ //если Айпи такой то выводит слово
    echo 'ok';
	}
	
	--- или остановить работу скрипта если Айпи совпадет
		
		if($_SERVER['REMOTE_ADDR']=='127.0.0.1'){  //если зайдут с этого айки по ИФ сработает
		echo 'Извините вам нет доступа';
		exit ('стоп');
		}
		echo 'Petya'; //если Айпи совпадает то слово не выведется потому что сработает exit
        
		if($_SERVER['REMOTE_ADDR']!='127.0.0.1'){ - если айпи не такой то выход
		exit;
		}
	
	
	
$_GLOBALS - также видно из функций из массивов и так далие 
		$x = 10
		function test(){
		echo $GLOBALS['x'];  - несмотря на то что переменная не в функции и мы ее делаем глобальной
		}
		test()
	
	
	
Вся информация храниться в Базах Данных и у каждого пользователя (например ) своя база данных есть базы данных доступные всем пользователям
	
$_SESSION; - привязываються к определенному пользователю - тоесть это переменная
конкретного пользователя
 - Находяться на сервере
 - Поскольку данные сессий находяться на сервере мы им доверяем
 
 $_SESSION=array();
 Если сесией на сайте ничего не делали( пользователь не лазил по страницам ни делал никакой активности) то сессия умирает(время жизни сессии ограничено последней активность клиента)
	Для того что-бы работать с сессией ее нужно включить в начале файла
	(скрипта) session_start();
	если сесия не включена:
	то мы не сможем   -Читать данные
					-Добавлять данные
					-Редактировать данные
					-Удалять данные
	Как добавлять данные- 
	$_SESSION['name'] = 'login'; - теперь существует сессия с login 
	Сесию можно создавать в одном файле а вызывать в другом ( главное что-бы эти файлы были в оодной папке)
	
	Файл один - 
	<?php
	session_start();
	$_SESSION['name']='capons';
	?>
	
	Файл два - 
	<?php
	session_start();
	echo $_SESSION['name'];    //выводит capons    
	$_SESSION['name']='login';
	echo $_SESSION['name'];    //выводит login
	unset($_SESSION['name']);   //удаляет сесию login
	session_unset();    //очистили сессию
	session_destroy();   // удалили сессию
	?>
C новой сессией создаеться новая КУКА с идентификатором сессии


-----Создаем щетчик перехода по страницам по $_SESSION
<?php
session_start();
$_SESSION["pages"] .= $_SERVER["PHP_SELF"].'|'; // $_SERVER["PHP_SELF"] - показывает путь на каоторой странице мы щас находимся и мы записываем его в сесионую переменую и каждый раз как мы заходим на какую то страницу в сесию будет записываться новый путь '|' разделитель по которому потом можно разбить строку на массив

$page = explode("|",$_SESSION['pages']); // создаем массив $page в который помещаем разбитый масси $_SESSION['page']
if(is_array($page)){
	array_pop($page); //если без этой строки сделть то будет создаваться пустая последняя ячейка массива а так мы ее убираем и условие сверху
	echo "<ol>";
	foreach ($page as $key){
		echo "<li>$key</li>"; //выводим пути положения на страницах + номеруем по порядку с помошью тегов <ol> <li>
	}
	echo "</ol>";
}
?>
---------------

	
	
$_COOKIE; - привязываються к определенному пользователю
 - Находяться у клиента
 - Клиент может делать с ними что захочет ( мы этим данным не доверяем)
 - Cookie храняться столько сколько мы укажим
 - в куки нельзя хранить важную инфо
 $_COOKIE = array();
 
	Когда создаеться сессия то в COOKIE создаеться идентификатор по 
	которому определяеться кому пренадлежит сессия (идентификатор Куки говорит 
	что именна эта сессия пренадлежит тебе)
	
	В WINDOWS Cookie находяться в папке (Internet explorer для других браезеров другой путь) Documents and Setting\admin\Cookie
	
	Период заголовков существует до первого echo 
	-Читать данные - можно везде
	-Добавлять данные - В ПЕРИОД ОТПРАВКИ ЗАГОЛОВКА ( Тоесть сначала с данным работаем а потом выводим)
	-Редактировать данные - В ПЕРИОД ОТПРАВКИ ЗАГОЛОВКА
	-Удалять данные - В ПЕРИОД ОТПРВКИ ЗАГОЛОВКА
Кука живет на стороне клиента и поэтому при указании времени жизни по истечению она будет удалена у клиента
	
	Выводить COOKIE echo $_COOKIE['name2'];
	
	---
	<?php
	//setcookie('key','value','/',time())
	setcookie('name2','Stanislav',time()+60,'/');          //COOKIE создаеться (ключ,значение ключа, ('/' означает что действует по всему сайту),time()настоящее время +60 что будет сущ 1 минуту кука)
	setcookie('name2','Bogdan',time()+60, '/');   //Присваиваем COOKIE новое значение
	setcookie('name2','Bogdan',time()-60, '/');   //Вот так убиваеться КУКА просто ставить отрицательное время любое
	//КУКИ МОЖНО УДАЛЯТЬ РЕДАКТИРОВАТЬ ДО ВЫВОДА НА ЭКРАН echo
	echo "<pre>";
	print_r($_COOKIE);
	echo "</pre>";
	?>
	---