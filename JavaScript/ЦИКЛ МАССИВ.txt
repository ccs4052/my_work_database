


Логические операторы

and (&&), or (||), and not (!)

ИЛИ
true || true;     // => true
true || false;    // => true
false || true;    // => true
false || false;   // => false

И
true && true;    // => true
true && false;   // => false
false && true;   // => false
false && false;  // => false










---------------ФУНКЦИИ
prompt - выводит табличку с надписью которую мы спрашиваем и можно вести какое нибуть значение и потом с ним работать
		var color = prompt("What's your favorite primary color?","Type your favorite color here");

length - длина цикла или строки

push()  - положить переменную в массив например
		hits.push(text[j])    // hits - массив в который помещаем 
							 //text[j] - что помещаем
	
isNaN - функция которая определяет число или не число
		isNaN(number)
		

		
toUpperCase - конвертирует строку в буквы большого размера
		var user = prompt("Lets go to training?").toUpperCase();

toLowerCase - конвертирует буквы в маленькие
	








----------ЦИКЛ For

for (var counter = 1; counter < 6; counter++) {
	console.log(counter);
}

-- По 5 растет
for (var i = 5; i < 51; i+=5) {
	console.log(i);
}


--Счетчик на отрицание
for (var i = 10; i >= 0; i--) {
	console.log(i);
}



-------------МАССИВ если в [] значит массив

var junk = ["data","name",2,10];
console.log(junk);

--Выводим конкретный элемент
var junkData = ["Eddie Murphy", 49, "peanuts", 31];
console.log(junkData[3]);



---------------ГЕТЕРОГЕННЫЙ МАССИВ смешаный
var myArray = [42,true,"bogdan"];


---------в смешанный массив можно поместить и ОБЪЕКТ

var myObj ={
    type: 'fancy',
    disposition: 'sunny'    
    };

var myArray = [5,true,"bogdan",myObj];
----


--------------ВЛОЖЕНЫЕ МАССИВА 
var newArray = [[1,2,3],[3,2,1],[5,6,7]];

--еще пример

var name = ["bogdan"];
var age = [20,25,30];
var newArray = [[name,age],[4,3,2],[6,4,3]]




-------------ВЫВОДИМ ВСЕ ЭЛЕМЕНТЫ МАССИВА ЦИКЛОМ For

var cities = ["Bod1", "Bog2", "Helsinki", "NYC","Bog3"];

for (var i = 0; i < cities.length; i++) {
    console.log("I would like to visit " + cities[i]);
}




------------------ПРИМЕР Цикла For находим слова с определенными буквами в слове и выводим их

var text = "fdf dsfdsf Bogdan dsfdsf Bogdan";             //данная строка
var myName = "Bogdan";                                    //Строка которую хотим найти в другой страке
var hits = [];											  //массив куда будем помещать совпадения
for (var i=0; i < text.length; i++){					  //цикл делаеться на длину строки text
    if (text[i] === "B"){								// Нада указать первую букву слова которое ищем обязательно как только натыкаеться цикл на букву B запускаеться цикл на длину слова переменной myName
            for (var j = i; j< (myName.length + i); j++){ // запускаеться цикл на длину слова которое ищем
                hits.push(text[j])                       //помещаем результат в масив hits
                }
        }
    }
if(hits.length === 0){                        //если в массиве что-то есть то выводим это на экран
    console.log("Your name wasn't found!");
    }else {
        console.log(hits);                     //выводим массив с результатом
        }
		
		
		
		
		
		
		
		
		
		
		
		
		
		
-----------------------ЦИКЛ WHILE ИСПОЛЬЗУЕМ КОГДА МЫ НЕЗНАЕМ Какое количество раз нам нада использовать цикл (тоесть выводит все возможные циклы)


var coinFace = Math.floor(Math.random() * 2);

while(coinFace === 0){
	console.log("Heads! Flipping again...");
	var coinFace = Math.floor(Math.random() * 2);
}
console.log("Tails! Done flipping.");


----Выводит надпись 1 раз
var understand = true;
while( understand ){
	console.log("I'm learning while loops!");
	understand = false;
}


----или так пока будет True будет выводиться надпись 

var bool = true;
while(bool){
    console.log("Less is more!");
    bool = false;
}



-----ЦИКЛ While и функция на запуск определенного действия 3 раза

var count = 0;                              //создали переменную
var loop = function(){						//создаем функцию
	while(count < 3){						//запускаем цикл
		console.log("I'm looping!");
		count++;							//включаем счетчик
	}
};
loop();										//запускаем функцию










--------------ПРИМЕР С ИСПОЛЬЗОВАНИЕМ IF  и WHILE игра 

var slaying = true;
// A bit of new math magic to calculate the odds
// of hitting the dragon. We'll cover this soon!
var youHit = Math.floor(Math.random() * 2);               //гененирует число 1 или 0  - True или False
var damageThisRound = Math.floor(Math.random() * 5 + 1);  // генерирует число от 1 до 5
var totalDamage = 0;                                      //переменая которая набирает в себя общий урон

while (slaying) {                                        // если True
  if (youHit) {											// если True
    console.log("You hit the dragon and did " + damageThisRound + " damage!");
    totalDamage += damageThisRound;						//если условие выполняеться то дописываем в totalDamage значение damageThisRound
    
    if (totalDamage >= 4) {								//если > 4 то True
      console.log("You did it! You slew the dragon!");
      slaying = false;									//если условие выполнелось то останавливаем цикл
    } else {
      youHit = Math.floor(Math.random() * 2);			//запускаем youHit снова если условие не выполнелось
    }
  } else {
    console.log("The dragon burninates you! You're toast.");
    slaying = false;
  }
}




----------------------ФУНКЦИЯ isNaN   - передали в функцию число и функция проверяет число передали или нет

var isEven = function(number) {
  if(number % 2){
        return false;      
      }else if(isNaN(number)){
            return "You need number"
      }else{
          return true;
          }
}
isEven(6);




--------------------ФУНКЦИЯ Switch 

var lunch = prompt("What do you want for lunch?","Type your lunch choice here");

switch(lunch){
  case 'sandwich':
    console.log("Sure thing! One sandwich, coming up.");
    break;
  case 'soup':
    console.log("Got it! Tomato's my favorite.");
    break;
  case 'salad':
    console.log("Sounds good! How about a caesar salad?");
    break;
  case 'pie':
    console.log("Pie's not a meal!");
    break;
  default:
    console.log("Huh! I'm not sure what " + lunch + " is. How does a sandwich sound?");
}


---еще пример
var color = prompt("What's your favorite primary color?","Type your favorite color here");

switch(color) {
  case 'red':
    console.log("Red's a good color!");
    break;
  case 'blue':
    console.log("That's my favorite color, too!");
    break;
  //Add your case here!
  case 'green':
    console.log("Green nice color");
    break;
  case 'yellow':
      console.log("Yellow nice too!");
      break;
  default:
    console.log("I don't think that's a primary color!");
}







--------------------- ПРИМЕР аленькой игры на Switch и if
var troll = prompt("You're walking through the forest, minding your own business, and you run into a troll! Do you FIGHT him, PAY him, or RUN?").toUpperCase();

switch(troll) {
  case 'FIGHT':
    var strong = prompt("How courageous! Are you strong (YES or NO)?").toUpperCase();
    var smart = prompt("Are you smart?").toUpperCase();
    if(strong === 'YES' || smart === 'YES') {
      console.log("You only need one of the two! You beat the troll--nice work!");
    } else {
      console.log("You're not strong OR smart? Well, if you were smarter, you probably wouldn't have tried to fight a troll. You lose!");
    }
    break;
  case 'PAY':
    var money = prompt("All right, we'll pay the troll. Do you have any money (YES or NO)?").toUpperCase();
    var dollars = prompt("Is your money in Troll Dollars?").toUpperCase();
    if(money === 'YES' && dollars === 'YES') {
      console.log("Great! You pay the troll and continue on your merry way.");
    } else {
      console.log("Dang! This troll only takes Troll Dollars. You get whomped!");
    }
    break;
  case 'RUN':
    var fast = prompt("Let's book it! Are you fast (YES or NO)?").toUpperCase();
    var headStart = prompt("Did you get a head start?").toUpperCase();
    if(fast === 'YES' || headStart === 'YES') {
      console.log("You got away--barely! You live to stroll through the forest another day.");
    } else {
      console.log("You're not fast and you didn't get a head start? You never had a chance! The troll eats you.");
    }
    break;
  default:
    console.log("I didn't understand your choice. Hit Run and try again, this time picking FIGHT, PAY, or RUN!");
}










-----------------------------------------Объекты в JavaScript ООП
Один вид

var phonebookEntry = {};

phonebookEntry.name = 'Oxnard Montalvo';            //переменные внутри объекта
phonebookEntry.number = '(555) 555-5555';
phonebookEntry.phone = function() {
  console.log('Calling ' + this.name + ' at ' + this.number + '...');
};

phonebookEntry.phone();  //вызываем объект и функцию внутри него
----
2 способа создавать ОБЪЕКТЫ

1 - var me = new Object();    //создали Объект
2 - var me = {};              //создан объект

	
	
---Поместим массив в ключь объекта 

var myObject = {
  name: 'Eduardo',
  type: 'Most excellent',
  interests: ['bogdan','ira']
};



----ПРИМЕР ИСПОЛЬЗОВАНИЯ ОБЪЕКТОВ


var friends = {};                  //создали объект
friends.bill = {                  //создаем новый объект внутри нашего объекта
  firstName: "Bill",
  lastName: "Gates",
  number: "(206) 555-5555",
  address: ['One Microsoft Way','Redmond','WA','98052']   //адресс у нас помещен в массив
};
friends.steve = {
  firstName: "Steve",
  lastName: "Jobs",
  number: "(408) 555-5555",
  address: ['1 Infinite Loop','Cupertino','CA','95014']
};

var list = function(obj) {      //передаем название объекта из которого нужно вывести названия всех объектов
  for(var prop in obj) {
    console.log(prop);			//выводим имена всех объектов
  }
};

var search = function(name) {       //передаем в функцию название содержимого ключа по этому название сделаем сравнение
  for(var prop in friends) {				перебираем все объекты объекта friends
    if(friends[prop].firstName === name) {  //(friends[prop] - названия объектов объекта friends    -- firstName - ключь массива который содержит имя значения )    в условие приравниваем имя ключа объекта с значением которое мы отправили в функцию 
      console.log(friends[prop]);        //выводим значение в консоли
      return friends[prop];             // либо передаем значение в функцию если мы хотим его гдето использовать
    }
  }
};

list(friends);            //вызываем все объекты из объекта friends
search("Steve");          // ищем слово функцией search в объекте friends и в объектах friends


----------Еще пример использования телефонной книги  в объектах


<script>
    var bob = {
        firstName: "Bob",
        lastName: "Jones",
        phoneNumber: "(650) 777-7777",
        email: "bob.jones@example.com"
    };

    var mary = {
        firstName: "Mary",
        lastName: "Johnson",
        phoneNumber: "(650) 888-8888",
        email: "mary.johnson@example.com"
    };

    var contacts = [bob, mary];                  //Создаем массив в который помещаем имена объектов

    function printPerson(person) {					// функция печатает элементы которые находяться в объекте который мы получили через функцию
        console.log(person.firstName + " " + person.lastName);
    }

    function list() {								//печатаем элементы объекта
        var contactsLength = contacts.length;
        for (var i = 0; i < contactsLength; i++) {
            printPerson(contacts[i]);
        }
    }


    function search(name){								 //находим по названию ключа в объекте нужное поле
        var contactsLength = contacts.length;
        for (var i = 0; i < contactsLength; i++) {

            if(contacts[i].lastName === name){            //содержимое поля объекта сравниваем с тем что пришло в функцию
               // console.log(printPerson(contacts[i]));
               return printPerson(contacts[i]);           // возвращаем значение в функцию
            }
        }
    }
	function add (firstName,lastName,phoneNumber,email){ //функция добавляет в массив объектов новый объект с новыми значениями
    contacts[contacts.length]={
        firstName: firstName,
        lastName: lastName,
        phoneNumber: phoneNumber,
        email: email
        };
    }
    add("sdfsdf","sdfsdf","23424","sddf");
	
   //search("Johnson");   //вызываем функцию search и передаем в нее значение для поиска

</script>




----------------ОБЇЕКТ СЧИТАЕТ СУММУ Разных товаров и возвращает ответ

var cashRegister = {            //наш объект
    total:0,					//метод который несет в себе число 0
    add: function(itemCost){	//метод объекта с функцией которая выводит сумму товаров и кладет результат в метод total
        this.total += itemCost;
    }
};
cashRegister.add(0.98+1.23+4.99+0.45);
console.log('Your bill is '+cashRegister.total);


----ТОже самое но с оператором Case
var cashRegister = {
    total: 0,                            //метод отображающий сумму покупки
	 lastTransactionAmount:0,           //метод отображающий сумму единиц выбраного товара
    add: function(ItemCost){            // метод добавляет функцией результат в метод total
        this.total += ItemCost;
        },
	scan: function(item, quantity) {     //метод scan запускает функцию с свичем который в зависимости от того что передали в функцию подбирает цену - вторым параметром передаем количество товара
            this.lastTransactionAmount += 1 * quantity;  //добавляем в метод количество выбранных единиц товара
		   switch (item) {
                case "eggs": this.add(0.98 * quantity); break;     // цена умноженая на количество - количество передали вторым параметром в функию
                case "milk": this.add(1.23 * quantity); break;
                case "magazine": this.add(4.99 * quantity); break;
                case "chocolate": this.add(0.45 * quantity); break;
                default: this.add(0);
            }
            return true;                                       //возвращаем ответ в функцию
        }
 };
    cashRegister.scan("eggs",4);                            //передаем название товара и количество вторым параметром 
    cashRegister.scan("milk",4);
    cashRegister.scan("magazine",4);
    cashRegister.scan("chocolate",4);
    console.log('Your bill is '+cashRegister.total);           //вызываем объект с методом total с общим количеством суммы товара
	console.log('Your bill is '+cashRegister.total);      //отображаем метод с количеством выбранного товара 