КОНСТАНТЫ - ФУНКЦИИ С ПАРАМЕТРАМИ - ВОЗВРАТ ЧЕГОТО ФУНКЦИИ - МАССИВЫ - ОПЕРАТОРЫ SQL - ПОДКЛЮЧЕНИЕ ФАЙЛА (require_once или require))



-----------Осуществить вывод данных с таблица SQL , каждую операцию делаем в своем файле -
сделать возможность администрирования базы данных ( создание еще файла) +
добавление новых пользователей ( еще файл) +
удаление инфо с БД ( еще файл) +
обновление данных ( еще один файл)
Для этой работы нам потребуеться 4 скрипта в разных файлах
---Файл Show.php - показ
---new.php - добавление нового пользователя
---del.php - скрипт удаления из БД
---edit.php - редактирование БД
---meny.php - файл с меню для того что-бы его можно было использовать в скрипте PHP
Нада создать меню с посредством которого мы будем попадать на эти 4 файлах
- Меню создадим в новом файле menu.php ( для того что-бы его можно было использовать в скрипте PHP)

ОТЛИЧИЕ ФУНКЦИЙ ПОДКЛЮЧЕНИЯ ДРУГ ОТ ДРУГА---
 require 'menu.php';  - подключает файл но если мы ошибемся то будет выдана ошибка и скрипт прекратит работу ( работает быстрей include) ( require_once выдет критикал эрор)
 require_once 'menu.php'; - файл подключаеться один рар ( если так 2 раза написать то выведеться один раз)
 include 'menu.php';  - тоже самое что require но будет выведена не критичная ошибка в случае ошибки  и будет продолжена работа ( инклуд включает файл до обработке кода)
 include_once 'menu.php';
 
 
 
 ----Теперь подключим наш скрипт меню во все 4 файла 
 <?php
 require_once 'menu.php';
 ?>
  Это сделано для того - если в закладку меню вводяться изменения вы их вносим только в одном файле и это переноситься на наши 4 файла
  
  
  
  ------Следущее установим соединение с базой данных
  Создаем новый файл с скриптом подклчения к базе данных
  ---
<?php
mysql_connect("localhost", "user", "111") or die("нет подключения к серверу");
mysql_select_db("bogdan") or die("невозможно выбрать БД");
mysql_query("SET NAMES windows1251") or die("не установлена кодировка");
?>


Теперь добавляем в файл константы и значение констант помещяем в строки подключений ---
---  connect.php (теперь этот файл нужно подключить ко все 4-м нашим файлам)
<?php
define('DB_HOST', 'localhost');   //подключения помещяем в константы для уобства (имя сервера храним в этой константе)
define('DB_USER', 'user');     //во второй константе храним имя юзера
define('DB_PASS', '111');    //тут храним пароль
define('DB_NAME', 'bogdan');  //тут храним имя базы данных

mysql_connect("DB_HOST, DB_USER, DB_PASS) or die("нет подключения к серверу");
mysql_select_db(DB_NAME) or die("невозможно выбрать БД");
mysql_query("SET NAMES utf8") or die("не установлена кодировка");
?> 

1)-------------------ФАЙЛ ОСНОВНОЙ  show.php
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.ord/TR/html4/loose.dtd">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Документ без названия</title>
</head>
<body>
<?php
require_once 'connect.php'
?>
<?php
require_once 'menu.php';
?>

</body>
</html>

2)------------------Файл menu.php

<a href="show.php">Главная</a> | <a href="new.php">Добавление</a> | <a href="del.php">Удаление</a> | <a href="edit.php">Редактирование</a>
</a>
<hr />

3)----------------Файл New.php
<?php require_once 'connect.php' ?>

<?php require_once 'menu.php'; ?>

4)----------------Файл del.php
<?php require_once 'connect.php' ?>

<?php require_once 'menu.php'; ?>

5)-----------------Файл edit.php
<?php require_once 'connect.php' ?>

<?php require_once 'menu.php'; ?>
6)-----------------Файл connect.php
<?php
define('DB_HOST', 'localhost');   //подключения помещяем в константы для уобства (имя сервера храним в этой константе)
define('DB_USER', 'user');     //во второй константе храним имя юзера
define('DB_PASS', '111');    //тут храним пароль
define('DB_NAME', 'bogdan');  //тут храним имя базы данных

mysql_connect(DB_HOST, DB_USER, DB_PASS) or die("нет подключения к серверу");
mysql_select_db(DB_NAME) or die("невозможно выбрать БД");
mysql_query("SET NAMES utf8") or die("не установлена кодировка");
?>





-------------------------------Для Вывода таблици из MySQL нарисуем такую же талбицу в файле основном
Работа с базой данных выноситься в отдельный файл!!!!!!!
---Создадим файл libs.php и Файл libs.php подключим во все наши файлы show.php new.php del.php edit.php
потому как с библиотекой мы бедм работать во всех наших файлах.

---------------ФАЙЛ libs.php

<?php
//функция показа абонентов
function showALL(){              //функция показывает всех абонентов таблици SQL
$query = "SELECT * FROM test1 ORDER BY id";  // пишем запрос базе данных на показ всех данных из таблици test1 и ORDER BY id - вывод данных сартируеться по ID от меньшего к большему ( если ORDER BY ID DESC ) то будет показывать от большего к меньшему
$res = mysql_query($query);     //запрос посылаем в базу данных (переменная $res появиться табличков
$data = array(); //создадим массив который мы будем использывать в нашем цикле
while($row = mysql_fetch_assoc()) {  //делаем массив который можно будет вставить в таблицу html
   $data[] = $row;              //(в массив $data попадает то что попадает в массив $row)в массив попадают по очереди все ряды нашей таблици
}
    return $data;       //( и в результате возвращаеться массив $data) возвращаем как результат работы функции showALL
}
?>


ФАЙЛ libs.php вызываем в файле show.php и в файле show.php можно вызвать функцию showALL которая в файле libs.php


<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.ord/TR/html4/loose.dtd">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Документ без названия</title>
</head>
<body>
<?php
require_once 'connect.php'
?>
<?php require_once 'libs.php'; ?>
<?php
require_once 'menu.php';
?>
<?php
$result = showALL(); //присвоим функции showALL переменую $result ($result получиться массивом)
?>
<table border="1" width="300">
    <tr>                          <!--<tr> строка в которой <td> 3 ячейки-->
        <td>Имя:</td>
        <td>Телефон:</td>
        <td>Фозраст:</td>
    </tr>
<?php                       // Для вывода конструкции массива $result в таблицу делаем цикл foreach-->
foreach($result as $item) { ?>   <!--(закрыли тэг PHP для того чтобы таблицу не выводить ЭХОМ для удобства)   на каждую итерацию цикла мы присваиваем переменную $item -->
    <tr>
        <td><?php echo $item['name']; ?></td> <!-- $item['название столбца таблици SQL-->
        <td><?php echo $item['phone']; ?></td>
        <td><?php echo $item['age']; ?></td>
        </tr>
    <?php
}
?>
    <tr>                          <!--<tr> строка 2 в которой <td> 3 ячейки-->
        <td>Иванов</td>      <!-- переписали такие же данные в ручное что и в первой строке нашей таблица  БД -->
        <td>11111</td>
        <td>30</td>
    </tr>
</table>

</body>
</html>

--------------------------- ИТАК МЫ ВЫВОДИМ ВСЕ ДАННЫЕ В ОСНОВНОМ ФАУЛЕ SHOW.php

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.ord/TR/html4/loose.dtd">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Документ без названия</title>
</head>
<body>
<?php
require_once 'connect.php'
?>
<?php require_once 'libs.php'; ?>
<?php
require_once 'menu.php';
?>
<?php
$result = showALL(); //присвоим функции showALL переменую $result ($result получиться массивом)
?>
<table border="1" width="300">
    <tr>                          <!--<tr> строка в которой <td> 3 ячейки-->
        <td>п.номер</td>    <!-- добавим столбик с порядковым номером строки -->
        <td>Имя:</td>
        <td>Телефон:</td>
        <td>Фозраст:</td>
    </tr>
<?php                       // Для вывода конструкции массива $result в таблицу делаем цикл foreach-->
$i = 1;
foreach($result as $item) { ?>   <!--(закрыли тэг PHP для того чтобы таблицу не выводить ЭХОМ для удобства)   на каждую итерацию цикла мы присваиваем переменную $item -->
    <tr>
        <td><?php echo $i; ?></td>  <!--добавили столбец с порядковым номером при каждой итерации будет увеличен на  1-->
        <td><?php echo $item['name']; ?></td> <!-- $item['название столбца таблици SQL-->
        <td><?php echo $item['phone']; ?></td>
        <td><?php echo $item['age']; ?></td>
        </tr>
    <?php
    $i++;
}

?>
    <tr>
        <td colspan="3">всего:</td>   <!-- считает столбци  -->
        <td><?php echo $i - 1; ?></td>     <!--выводим значение $i минус один ( потому как строку ВСЕГО считать не надо)-->
    </tr>
</table>

</body>
</html>





-----------------------(2) ДОБАВЛЯЕМ НОВОГО ПОЛЬЗОВАТЕЛЯ
Для того что-бы добавить нового пользователя нам понадобиться ФОРМА
Форму добавим в файл new.php

<?php require_once 'connect.php' ?>
<?php require_once 'libs.php'; ?>
<?php require_once 'menu.php'; ?>
<form method="post">       <!-- форма для отправления даггых(методом post безопасным) в форме содержиться 3 поля и кнопка которая будет отправлять данные -->
    <p>Имя: <input type="text" name="name" /></p>
    <p>Телефон:<input type="text" name="phone" /></p>
    <p>Возраст: <input type="text" name="age" /></p>
    <p><input type="submit" name="submit" value="Добавить" /></p>
</form> <!-- данные будут передаваться в этот же файл new.php -->

Далее в файле new.php после подключения библиотеки в файле  и перед командой вывода меню -
мы будем принимать и обрабатывать наши данные после формы с запросом POST.

<?php session_start(); ?>   <!--если мы работаем с сессиями ее нужно открыть(ОЧЕНЬ ВАЖНО МЕЖДУ SESSION_START и HEADER ничего не должно выводиться в браузер даже пустой строки не должно быть в коде иначе не будет работать-->
<?php require_once 'connect.php' ?>
<?php require_once 'libs.php'; ?>
<?php
if($_POST['submit']) { //сначала проверим была ли нажата кнопка submit в форме  (Ниже мы присваиваем различные функции полям через которые мы будем получать данные что-бы они их фильтровали
    $name =trim(mysql_real_escape_string($_POST['name'])); //создадим обычную переменую и присвоим им значения массива POST
    $phone =trim(mysql_real_escape_string($_POST['phone'])); //(Функция Trim удаляет из строки пробелы слева и справа) используем функцию mysql_real_escape_string (для того что-бы прослешировать строковые данные)
    $age =trim((int)$_POST['age']); //в этом поле в БД храняться числа и значение integer поэтому (int)-приводит данные к целочисленному типу
$error = '';    // алгоритм для проверки заполнения полей которые указаны в if выше их у нас 3 (создаем переменную $error в нее вкладывам переменные заполненых полей и проверяем есть в них значения или нет
    if(empty($name)) $error .= '<p>Не заполнено поле "Имя"</p>'; // для проверки используем специальную функцию (empty) если поле с переменной $name пустое то к переменной $error приклеиваем через точку надпись
    if(empty($phone)) $error .= '<p>Не заполнено поле "Телефон"</p>';
    if(empty($age)) $error .= '<p>Не заполнено поле "Возраст"</p>';
    if(empty($error)) { //и проверим осталось ли пустым значение переменной $error
    }else{
     $_SESSION['res'] = $error;   //используем сесионную переменную
    header("Location: new.php"); // Используем сессию для того что-бы после отправки формы если мы попытаемся обновить страницу то нам предложит отправить данные из формы повторно (что-бы этого небыло мы перезапросим страницу и все POST данные будут уничтожены) обращаться будем к той же странице в которой у нас написан код new.php
        exit; // завершим работу скрипта и ниже выведем то что у нас есть в переменной $_SESSION['res']
    }
    }
?>
<?php require_once 'menu.php'; ?>
<form method="post">       <!-- форма для отправления даггых(методом post безопасным) в форме содержиться 3 поля и кнопка которая будет отправлять данные -->
    <p>Имя *: <input type="text" name="name" /></p>
    <p>Телефон *:<input type="text" name="phone" /></p>
    <p>Возраст *: <input type="text" name="age" /></p>
    <p><input type="submit" name="submit" value="Добавить" /></p>
</form> <!-- данные будут передаваться в этот же файл new.php -->

<?php
echo $_SESSION['res'];
session_unset();
session_destroy();
?>

--------------------ТЕПЕРЬ НАПИШЕМ ФУНКЦИЮ КОТОРАЯ БУДЕТ ДОБАВЛЯТЬ ЗНАЧЕНИЯ В БАЗУ ДАННЫХ 
ДЛЯ ЭТОГО ОБРАЩАЕМСЯ К Нашей библиотеке через наш файл libs.php


<?php
//функция показа абонентов
function showALL(){              //функция показывает всех абонентов таблици SQL$query = "SELECT * FROM test1";  // пишем запрос базе данных на показ всех данных из таблици test1
$query = "SELECT * FROM test1 ORDER BY id";  // пишем запрос базе данных на показ всех данных из таблици test1 и ORDER BY id - вывод данных сартируеться по ID от меньшего к большему ( если ORDER BY ID DESC ) то будет показывать от большего к меньшему
$res = mysql_query($query);     //запрос посылаем в базу данных (переменная $res появиться табличков
$data = array(); //создадим массив который мы будем использывать в нашем цикле
while($row = mysql_fetch_assoc($res)) {  //делаем массив который можно будет вставить в таблицу html
   $data[] = $row;              //(в массив $data попадает то что попадает в массив $row)в массив попадают по очереди все ряды нашей таблици
}
    return $data;       //( и в результате возвращаеться массив $data) возвращаем как результат работы функции showALL
}

function newContact($name, $phone, $age){ // функция добавления обанента с нашими параметрами таблици БД
$query = "INSERT INTO test1 (name, phone, age) VALUES ('$name', '$phone', $age)";   // отправляем запрос к БД VALUES в том порядке что и значения в test1 и $name $phone  в кавычках потому как строковые данные
$res = mysql_query($query);   // отправляем нашь запрос в БД запрос поместили в переменую $res хотя это не обязательно
mysql_affected_rows(); //вызывать функцию можно сразу после отправленого запроса к БД (функция возврашяет(считает) количество рядов которые были затронуты (отправлены) последним запросом (функция помогает проверить результат запроса) если функция покажет все что больше 0 значит что-то добавилось (используют ее при использовании запросов INSERT UPDATE DELED)
if(mysql_affected_rows() > 0){  //если функция больше 0 значит что-то добавили чточит работает
    return TRUE;
} else {
    return FALSE;
}
}
?>


 ------------ ТЕПЕРЬ ФУНКЦИЮ newContact копируем и вставляем в файл new.php в цикл IF
 
 
 
 
 
 --------------- УДАЛЯЕМ ДАННЫЕ ИЗ БД 
 Описание функции удаления 
 function delContact($id){  //ID описан в файле del.php
    $query = "DELETE FROM test1 WHERE id = $id"; //запрос с удалением ID который будет подаваться в переменной $id
    mysql_query($query);  //отправляем запрос
}
-----------------ПОЛНЫЙ ФАЙЛ УДАЛЕНИЕ

<?php require_once 'connect.php' ?>
<?php require_once 'libs.php'; ?>
<?php //получение идентификатора id который используем href получаем его из массива GET-->//идентификатор нужен нам что-бы отправить его в базу данных и по нему удалить нужный нам элемент (в файле libs.php описываем функцию удаления абонента)
if(isset($_GET['id'])) { //isset - проверяет существует ли какая-то переменная в данном случае ($_GET['id']) (если существует то выполняем действие в фигурных скобках {}
    $id = (int)$_GET['id']; //поскольку идентификатор это целочисленный тип мы его для бепопасности помещаем в integer
    delContact($id); //вызываем функцию удаления абонента которую мы описали в файле libs.php
    header("Location: del.php"); //делаем ридирект на страницу del.php
    exit;
}
?>
<?php require_once 'menu.php' ?>

<?php
$result = showALL();
?>
<table border="1" width="300">
    <tr>
        <td>п.номер</td>
        <td>Имя:</td>
        <td>Телефон:</td>
        <td>Фозраст:</td>
    </tr>
    <?php
    $i = 1;
    foreach($result as $item) { ?>
        <tr>
            <td><?php echo $i; ?></td>
            <td><a href="?id=<?php echo $item['id']; ?>"><?php echo $item['name']; ?></a></td>    <!-- делаем столбец с name (столбец с именами) кликабельными ссылками что-бы при нажатии удалить их (ссылка на которую будем ссылаться при нажатии на имя будет вести на эту-же страницу (?) знак параметра после него идет имя параметра в нашем случае (ID) имя пользователя мы будем идентифицировать по его id в нашей таблице SQL - значение у нашего параметра id будет такое (php echo $item['name']; ?>) теги пхп убрал что-бы не засвечивать код -->
            <td><?php echo $item['phone']; ?></td>
            <td><?php echo $item['age']; ?></td>
        </tr>
        <?php
        $i++;
    }
    ?>
    <tr>
        <td colspan="3">всего:</td>
        <td><?php echo $i - 1; ?></td>
    </tr>
</table>



В Файле libs.php описана функция delContact (функция удаления)

<?php
function delContact($id){  //ID описан в файле del.php  (id это идентификатор поьзователя который ходим удалить из таблици в нашей БД)
    $query = "DELETE FROM test1 WHERE id = $id"; //запрос с удалением ID который будет подаваться в переменной $id
    mysql_query($query);  //отправляем запрос
}
?>




---------------------------РЕДАКТИРОВАНИЕ ДАННЫХ В НАШЕЙ ТАБЛИЦЕ
-В файл с Закладкой РЕДАКТИРОВАНИЕ edit.php мы засуним такой-же код который будет показывать нам отображение нашей таблици в Базе данных
- Только по клику на выделенное имя абонента в таблице (которая будет отображаься на странице) мы будем не удалять его а ВЫВОДИТЬ 3 поля формы -
- куда мы вводим новые данные name phone age и эти 3 новых данных меняю 3 старых данных
-Напишем номую функцию в файле libs.php для редактирования данных ( функция показа конкретного абонента в таб)

//фунцкия показа конкретного абонента (будем использывать тот же идентификатор ID)
<?php //описана в файле libs.php
function showContact($id){
    $query = "SELECT * FROM test1 WHERE id = $id"; //отметить в таблице test1 id = равный значению переменной $id
    $res = mysql_query($query); //запрос поместим в переменую $res
    $row = mysql_fetch_assoc($res); //сформируем массив $row
    return $row; //возвращать будет функция массив $row
}
?>

-------
ФУНКЦИЯ РЕДАКТИРОВАНИЯ ДАННЫХ ТАБЛИЦИ в файле libs.php
<?php
//функция изменения данных абонента
function editContact($id, $name, $phone, $age){
    $query = "UPDATE test1 SET name = '$name', phone = '$phone', age = $age WHERE id = $id";    //пишем запрос на изменение данных таблици test1 переменная $age не в кавычках потому как она несет в себе числовые данные - для того что-бы данных бади извенены по одной (а не все) мы пишем условие после команды WHERE =
    $res = mysql_query($query);
    if(mysql_affected_rows() > 0) { //проверяем изменилось ли что-то
        return TRUE;
    }else{
        return FALSE;
    }
}
?>

---------------ОСНОВНОЙ ФАЙЛ С ПРИМЕНЕНИЕМ ФУНКЦИЯ ОПИСАНЫХ ВЫШЕ

<?php session_start(); //<!-- открыли сессию --> ?>
<?php require_once 'connect.php' ?>
<?php require_once 'libs.php'; ?>
<?php
if($_POST['submit']) { //проверяем нажата-ли кнопка 'submit' если ды то получаем элементы описаные ниже
    $id = (int)$_POST['id']; //переменной $id присвоим значение массива POST
    $name =trim(mysql_real_escape_string($_POST['name'])); //создадим обычную переменую и присвоим им значения массива POST
    $phone =trim(mysql_real_escape_string($_POST['phone'])); //(Функция Trim удаляет из строки пробелы слева и справа) используем функцию mysql_real_escape_string (для того что-бы прослешировать строковые данные)
    $age =trim((int)$_POST['age']); //в этом поле в БД храняться числа и значение integer поэтому (int)-приводит данные к целочисленному типу
    $error = '';    //(проверка на пустоту) алгоритм для проверки заполнения полей которые указаны в if выше их у нас 3 (создаем переменную $error в нее вкладывам переменные заполненых полей и проверяем есть в них значения или нет
    if(empty($name)) $error .= '<p>Не заполнено поле "Имя"</p>'; // для проверки используем специальную функцию (empty) если поле с переменной $name пустое то к переменной $error приклеиваем через точку надпись
    if(empty($phone)) $error .= '<p>Не заполнено поле "Телефон"</p>';
    if(empty($age)) $error .= '<p>Не заполнено поле "Возраст"</p>';
    if(empty($error)) { //и проверим осталось ли пустым значение переменной $error
        if(editContact($id, $name, $phone, $age)){          //editContact функция описана в файле libs.php вызываем функцию изменения данных абонента
            $_SESSION['res'] = '<p>Изменено!</p>';
            header("Location: edit.php");
            exit;
        }else{
            $_SESSION['res'] = '<p>Ошибка или вы ничего не меняли!</p>';
            header("Location: edit.php");
            exit;
        }
    }else{
        $_SESSION['res'] = $error;   //используем сесионную переменную
        header("Location: edit.php"); // Используем сессию для того что-бы после отправки формы если мы попытаемся обновить страницу то нам предложит отправить данные из формы повторно (что-бы этого небыло мы перезапросим страницу и все POST данные будут уничтожены) обращаться будем к той же странице в которой у нас написан код new.php
        exit; // завершим работу скрипта и ниже выведем то что у нас есть в переменной $_SESSION['res']
    }
}
?>
<?php require_once 'menu.php' ?>
<?php //получение идентификатора id который используем href получаем его из массива GET-->//идентификатор нужен нам что-бы отправить его в базу данных и по нему удалить нужный нам элемент (в файле libs.php описываем функцию удаления абонента)
if(isset($_GET['id'])) { //isset - проверяет существует ли какая-то переменная в данном случае ($_GET['id']) (если существует то выполняем действие в фигурных скобках {}
    $id = (int)$_GET['id']; //поскольку идентификатор это целочисленный тип мы его для бепопасности помещаем в integer
    $contact = showContact($id); //вызываем функцию показа абонентов описаную в libs.php и данные поместим в массив $contact
    ?>   <!--нам понадобиться форма для ввода данных для этого закроем теги ПХП а после формы откроем (для удобства)-->
    <form method="post">
        <!-- добавили форму в которой при нажатии на определенное имя в таблице в форме с 3-мя полями отображаються их данных-->
        <p>Имя *: <input type="text" name="name" value="<?php echo $contact['name'] ?>"/></p>

        <p>Телефон *:<input type="text" name="phone" value="<?php echo $contact['phone'] ?>"/></p>

        <p>Возраст *: <input type="text" name="age" value="<?php echo $contact['age'] ?>"/></p>
        <input type="hidden" name="id" value="<?php echo $contact['id']?>" />   <!-- создадим еще одно поле скрытое-->
        <p><input type="submit" name="submit" value="Изменить"/></p>
    </form>  <!--теперь нам нужен обработчик нашей формы пишем его выше перед подключением menu ( там потому что мы будем делать редирект(header))-->
    <?php
    exit; //exit для того что-бы не выводило таблицу после того как мы выберем из нее какое нибуть имя например потому как exit находиться внутри узловия IF
}
?>
<?php
$result = showALL();
?>
<table border="1" width="300">
    <tr>
        <td>п.номер</td>
        <td>Имя:</td>
        <td>Телефон:</td>
        <td>Фозраст:</td>
    </tr>
    <?php
    $i = 1;
    foreach($result as $item) { ?>
        <tr>
            <td><?php echo $i; ?></td>
            <td><a href="?id=<?php echo $item['id']; ?>"><?php echo $item['name']; ?></a></td>    <!-- делаем столбец с name (столбец с именами) кликабельными ссылками что-бы при нажатии удалить их (ссылка на которую будем ссылаться при нажатии на имя будет вести на эту-же страницу (?) знак параметра после него идет имя параметра в нашем случае (ID) имя пользователя мы будем идентифицировать по его id в нашей таблице SQL - значение у нашего параметра id будет такое (php echo $item['name']; ?>) теги пхп убрал что-бы не засвечивать код -->
            <td><?php echo $item['phone']; ?></td>
            <td><?php echo $item['age']; ?></td>
        </tr>
        <?php
        $i++;
    }
    ?>
    <tr>
        <td colspan="3">всего:</td>
        <td><?php echo $i - 1; ?></td>
    </tr>
</table>
<?php
echo $_SESSION['res'];
session_unset();
session_destroy(); //завершили сессию
?>


