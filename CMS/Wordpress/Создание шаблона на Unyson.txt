Документация по Unyson http://manual.unyson.io/en/latest/
Все что написано в файлах и как создавать новые опции в меню wordpress и в меню создавания страниц и весь скрипт в файлах взят из сайта фреймоврка Unyson ссылка выше



	---------------------------Создание тем для вордпресс на ДВИЖКЕ фремворка Unyson
	
	1) Заходим на сайт гениратора стартовых тем underscores.me (эта тема содержит базовый правельный набор)
		 И на этом сайте вводим любое имя темы и генирируем ее
		 
	2) Теперь скачиваеться шаблон и мы его устанавливаем в папку wp-content/themes
		обновляем админку и в панеле темы появляеться шаблон темы которую мы установили
		
	3) В каждой папке с темой есть файл screenshot.png скин темы - если в нашей сгенерированой теме нет такого файла то откопируем из другой папки
	
	4)Потом делаем стартовую странцу заходим в pages называем там страницу стартовую
		- потом захоим в Setting - Reading и выбираем static page и выбираем нашу страницу 
		
	5) файл page.php файл который отвечает за страници в папке с темой
	Если мы делаем новую страницу мы копируем page.php и вставляем его в эту де папку с темой после page через "-" дописываем название страници page-home-page.php в моем случае главная страница называеться home-page (в настройках page и по названию страници edit и там Slug это название страници)
	-ТЕПЕРЬ редактирование главной страници находиться в файле wp-content/themes/page-home-page.php (page-"название Slug в настройках страници")
	
	6) Поскольку это главная страница удаляем из файла page-home-page цикл с новостями он нам ненада
	 + удаляем из файла get_sidebar(); он нам тоже не нада на главной странице
	 
	7) Далее в папке с нашей темой bogdan есть папка template-parts
		в этой папке копируем файл content-page и в новосохраненный файл сохраняем с именем content-home.php
		удаляем из єтого файла єту строку <article id="post-<?php the_ID(); ?>" <?php post_class(); ?>> она не нужна на главной странице
		удалем из єтого файла тег footer полностью он нам не нужен
		удаляем тег <header полностью он не нужен
		-Удаляем все короче кроме <?php the_content(); ?> и все только это должно быть
		
	8) Затем заходим в файл page-home-page и прописывам там использование нового созданого файле в папке template-parts/content-home.php
	
		get_template_part( 'template-parts/content', 'home' ); - home мы тут прописали вместо page
		
	
	9) Установи плагин на Wordpress для активации плагинова с сайта http://tgmpluginactivation.com/				download/zip
		-Заходим в папку с нашей темой wp-content/themes/bogdan и создаем там папку для плагина куда его и установим
		-Теперь копируем все из скачаного архива в папку
		-потом  example.php копируем и вставляе в эту же папку но с новым именем с именем нашей темы (bogdan)
			(в этом файле написаны инструкции как лучьше установить плагин - через Wordpress или через внешний источник или из папки)
	    -теперь открываем файл bogdan.php и в многомерном масиве $plugins оставляем только этот массив  (массив $config не трогаем)	
			$plugins = array(

				// This is an example of how to include a plugin bundled with a theme.
				array(
					'name'               => 'Unyson', // The plugin name.  //Название файла архива в папке lib/plugins/unyson.2.4.16 (Unyson)
					'slug'               => 'unyson', // The plugin slug (typically the folder name).  ////Название файла архива в папке lib/plugins/unyson.2.4.16 уже с маленькой пишем (unyson)
					'source'             => get_stylesheet_directory() . '/lib/plugins/unyson.2.4.16.zip', // The plugin source. //полное имя файла фреймворка УНИСОН в папке куда его скачали
					'required'           => true, //(ЕСЛИ ТУТ БУДЕТ FALSE то не будет работать) If false, the plugin is only 'recommended' instead of required.
					'version'            => '2.4.16', //(версию прописыли установленного УНИСОН - МОЖНО УБРАТЬ) E.g. 1.0.0. If set, the active plugin must be this version or higher. If the plugin version is higher than the plugin version installed, the user will be notified to update the plugin.
					'force_activation'   => true, //(БЫЛО false) If true, plugin is activated upon theme activation and cannot be deactivated until theme switch.
					'force_deactivation' => false, // If true, plugin is deactivated upon theme switch, useful for theme-specific plugins.
					'external_url'       => '', // If set, overrides default API URL and points to an external URL.
					'is_callable'        => '', // If set, this callable will be be checked for availability to determine if a plugin is active.
				),
		);

	10) Далее заходим на https://uk.wordpress.org/plugins/unyson/ - И Скачиваем УНИСОН фреймворк для создания тем
	Создаем папку в папке с нашей темой /lib/plugins/ и сюда устанавливаем архив скачаного унисона
	
	
	11) ТЕПЕРЬ НУЖНО ПОДКЛЮЧИТЬ ПЛАГИН TGM открываем файл functions.php и дописываем внизу следущее
		require get_template_directory() . '/tgm/bogdan.php'; - наш файл TGM который запускает фреймворк Unyson
		
	12) И теперь после обновления консоли в Wordpress появляеться надпись 
	This theme requires the following plugin: Unyson. Установить или нет - мы нажемаем установить 
	и Устанавливаеться Unyson и теперь его закладка управления доступна в панере рабочей Wordpress
	
	
	---НАСТРОЙКА Unyson заходим в вкладку на панели управления wordpress Unyson
	
	1) Нажимаем и устанавливаем Page Builder + Sliders (Это 2 основных расширения)
	
	
	
	
	
	----Что-бы создать свой css и применить  к нему свои стили
	
	1) В папке с темой bogdan создать свою папку css и в ней создать файл bogdan.css
	2) что-бы подключить css открываем файл functions.php
	и в функцию добавляем строку с подключение css файла 
	
	function bogdan_scripts() {
	wp_enqueue_style( 'bogdan-style-main', get_template_directory_uri(). '/css/bogdan.css' ); (Строка которую мы добавили) //ПОДКЛЮЧАЕМ CSS для нашей темы (bogdan-style-main (это id его можно назвать как угодно (Должен быть уникальным)) можно написать bogdan-style-bogdan что-бы дать более уникальное имя)
	}
	
	(Что-бы тема была адаптивной нужно создать файл в котором будут храниться @media для адаптивности ГРИДОВ")
	4) Заходим на сайт документации Unyson http://manual.unyson.io/en/latest/helpers/css.html#content
	и находим тут в разделе css Media queries и вставляем эти пару строк в файл media.css который создадим в папке bogdan/css с нашими стилями
	Заходим в function.php и подключаем файл media.css  файл с нашей Адаптивной Грид системой
	function bogdan_scripts() {
		wp_enqueue_style( 'bogdan-style-adaptive', get_template_directory_uri(). '/css/media.css' ); //ПОДКЛЮЧАЕМ CSS для АДАПТИВНОСТИ (в нем будут храниться @media) темы (bogdan-style-adaptive (это id его можно назвать как угодно) можно написать bogdan-style-adaptive что-бы дать более уникальное имя)
	}
	
	теперь для правельного грида устанавливаем в файле media.css такие стили
			
			/* Extra small devices (phones) */
			@media (max-width: 782px) { 
				.fw-container {
					width: 750px
				}
			 }

			/* Small devices (tablets) */
			@media (min-width: 783px) and (max-width: 900px) { 
				.fw-container {
					width: 970px
				}
			 }

			/* Medium devices (desktops) */
			@media (min-width: 901px) and (max-width: 1199px) { 
				.fw-container {
					width: 1170px
				}
			 }

			/* Large devices (large desktops) */
			@media (min-width: 1200px) { 
				.fw-container {
					width: 1170px
				}
			 }
			 ---ДОБАВЛЕНИЕ НАСТРОЕК В панель управления WORDPRESS фреймворка Unyson
	(КОГДА МЫ ЗАХОДИМ В PAGES в Wordpress все что мы видим в настройках странци это фрейворк Unyson и для того что-бы можно было внести изменения в стандартные блоки Унисано можно сделать следущее  )
	5) если мы хоти повесить новый класс какой нибуть на сетку фреймворка (сетка это Pages Loyaut Elements section)
	Создаем папки framework-customizations/extensions/shortcodes/shortcodes/section/ в папке с темой (в моем случае bogdan/framework-customizations/extensions/shortcodes/shortcodes/section/)
	и теперь копируем файл из папки C:\xampp\htdocs\bogdan\Wordpressweb\wp-content\plugins\unyson\framework\extensions\shortcodes\shortcodes\section options.php
	в папку с нашей темой bogdan  - bogdan/framework-customizations/extensions/shortcodes/shortcodes/section/options.php
	И создаем папку  framework-customizations/extensions/shortcodes/shortcodes/section/views и сюда копируем файл C:\xampp\htdocs\bogdan\Wordpressweb\wp-content\plugins\unyson\framework\extensions\shortcodes\shortcodes\section\view.php
	и в многомерный массив настроек файла options.php вносим настройки по добавлению нового класса к элементу 
	
	$options = array(
		'customclass' => array(												//ДОБАВИЛИ МАССИВ ЧТО-бы можно было добавить класс в параметр section в page setting Wordpress
		'label' => __('Custom Section Class', 'fw'),
		'desc'  => __('Insert Custom Section Class', 'fw'),
		'type'  => 'text',
	)
	);
	
	 и еще вносим изменения в откопированый файл views/view.php ЭТОТ ФАЙЛ ОТВЕЧАЕТ за вывод в ВРОНТ- ЕНД всего что связяна с фреймворком
	 этот файл должен выглядеть так после переменной $container_class
	 $container_class = ( isset( $atts['is_fullwidth'] ) && $atts['is_fullwidth'] ) ? 'fw-container-fluid' : 'fw-container';
	 $custom_class = ( isset( $atts['customclass'] ) && $atts['customclass'] ) ? ' ' . $atts['customclass'] . '' : '';          //ДОБАВЛЯЕМ В ВЫВОД в Fron End наш новый класс который мы добавили в параметр section  в настройках Page
	 ?>
	 <section class="fw-main-row<?php echo $custom_class; ?><?php echo esc_attr($section_extra_classes) ?>" <?php echo $section_style; ?> <?php echo $bg_video_data_attr; ?>>
		<div class="<?php echo esc_attr($container_class); ?>">
			<?php echo do_shortcode( $content ); ?>
		</div>
	 </section>
	 
	
	
	
	Теперь когда мы добавляем section в wordpress pages у секции появляеться настройка дополнительная ДОБАВИТЬ КЛАСС
	
	Теперь нажимает Edit над добавленной секции в Pages в wordpress на у нас в настройказ появилась строка
		добавить класс - добавляем класс например (test-class)
	
	
	6) ПОвесить на єлемент секции индивидуальный ID (В настройках Page фреймворка Unyson)
		открываем файл wp-content\themes\bogdan\framework-customizations\extensions\shortcodes\shortcodes\section options.php (файл конфигурации фреймворка Unyson)
		и добавляем в Многомерный массив настроек массив с добавлением ID в section 
		
			'customid' => array(												//ДОБАВИЛИ МАССИВ ЧТО-бы можно было добавить ID в каждый элемент section в page setting Wordpress
				'label' => __('Custom Section ID', 'fw'),
				'desc'  => __('Insert Custom Section ID', 'fw'),
				'type'  => 'text',
			)
			
		Затем надо отобразить ID в view фреймворка Unyson открываем wp-content\themes\bogdan\framework-customizations\extensions\shortcodes\shortcodes\section\views\view.php
		
		$custom_id = ( isset( $atts['customid'] ) && $atts['customid'] ) ? ' id="' . $atts['customid'] . '"' : '';          //ДОБАВЛЯЕМ В ВЫВОД в Fron End наш новый ID который мы добавили в параметр section  в настройках Page Unyson
		//section отобразил для пример мы добавили для отображения id только это <?php echo $custom_id; ?>
		//<section<?php echo $custom_id; ?> class="fw-main-row<?php echo $custom_class; ?><?php echo esc_attr($section_extra_classes) ?>" <?php echo $section_style; ?> <?php echo $bg_video_data_attr; ?>>
		//	<div class="<?php echo esc_attr($container_class); ?>">
		//		<?php echo do_shortcode( $content ); ?>
		//	</div>
		//</section>
		
	7) Добавий новых КАСТОМНЫХ ПОЛЕЙ для добавления элементов через  Unyson (ДОБАВЛЯЕМ НОВЫЙ ЭЛЕМЕНТ ДОБАВЛЕНИЯ КОНТЕНТА и в этот элемент можно добавить какие угодно настройки и метода какие только есть в фреймворке Unyson)
	Все конфигурационые манулы по добавлению элементо и их настройке находятся на сайте http://manual.unyson.io/en/latest/
	Создадим в папке фруймворка Unyson папку wp-content\themes\bogdan\framework-customizations\extensions\shortcodes\shortcodes  новая папка \my-component и в ней создадим файл /config.php
	
	в config.php помещаем 
	
		<?php if (!defined('FW')) {
		die('Forbidden');
		}

		$cfg = array(
			'page_builder' => array(
				'title'         => __('My Component', 'fw'), //мое название нового компонента дейтсвия
				'description'   => __('Demo shortcode description', 'fw'),
				'tab'           => __('Demo Elements', 'fw'),
				'popup_size'    => 'small',
			)
		);
		
	Затем создаем в папке wp-content\themes\bogdan\framework-customizations\extensions\shortcodes\shortcodes\my-component папку \static а в ней папку \img и в эту папку 
    копируем картинку из папки \wp-content\plugins\unyson\framework\extensions\shortcodes\shortcodes\icon\static\img page_builder.png	 // эта картинка с будущим новым компонентом в настройке панеле Page Wordpress ее можно заменить на любую
	
	8) Далее создадим папку my-component/views и в этой папке создадим файл view.php - файл для отображения нового компонента
	Файл view.php содержит в себе код ОТОБРАЩЕНИЯ всего что мы написали в нашем новом конфигунационом блоке (My component)
		<!--Выводим на экран элементы которые добаляем через наши новые элементы в Page wordpress -->
		<?php if (!defined('FW')) {
			die('Forbidden');
		}
		?>

		<?php if ( ! empty( $atts['demo_text'] ) ) {  ?> <!--demo_text ячейка в конфигурационом файле ../options.php (находиться на папку выше) -->
			
			<p><?php echo $atts['demo_text']; ?></p> <!--Выводим наш заголовок написанный конфигурации нашей новой секции - теперь он отображаеться на экране  -->

		<?php } ?>

		<?php if ( ! empty( $atts['demo_edit'] ) ) {  ?> <!--demo_edit ячейка в конфигурационом файле ../options.php (находиться на папку выше) -->
			
			<?php echo $atts['demo_edit']; ?> <!--Выводим тело которое написано в нашей новой секции   написанное в конфигурации нашей новой секции - теперь он отображаеться на экране  -->

		<?php } ?>
	
	
	
	
	9) Далее создадим файл options.php в папке с нашим компонентом my-component/options.php   (В этом ФАЙЛ МЫ ДОБАВЛЯЕМ ОПЦИИ (опции одержаться в массиве) что мы может добавлять в наш конфигурационный блок )
	 в файл помещем это - все взято с http://manual.unyson.io/en/latest/options/built-in-option-types.html#wp-editor
	 
			<?php if (!defined('FW')) {
				die('Forbidden');
			}

			$options = array(
				'demo_text'   => array(
					'label'   => __('Demo text label', 'fw'),
					'desc'    => __('Demo text description', 'fw'),
					'help'    => __('Demo text help', 'fw'),
					'type'    => 'text'
				),
				'demo_edit' => array(				//Когда будем нажимать на Edit на наш новый добавленный блок все будет редактрироваться в Wordpress wp-editor потому что мы его подключили
					'type'  => 'wp-editor',
					'teeny' => true,
					'reinit'=> true,
					'label' => __( 'Content', 'fw' ),
					'desc'  => __( 'Enter some content for this texblock', 'fw' )
				),
			);

	10) Если мы хотим добавить загрузку картинок в ОПЦИЮ нашего нового компонета 
	Создаем папку images в папке wp-content\themes\bogdan\framework-customizations\extensions\shortcodes\shortcodes\my-component\static и создаем папку images
	 добавляев в файл option.php код на добавление загрузки картинок в опции нашего блока 
	 
			$options = array(
				'demo_img' => array(
					'type'  => 'upload',
					'label' => __( 'Choose Image', 'fw' ),
					'desc'  => __( 'Either upload a new, or choose an existing image from your media library', 'fw' )
				)
			);
			
	11) Далее нада отобразить загруженую картинку в view.php открываем файл wp-content\themes\bogdan\framework-customizations\extensions\shortcodes\shortcodes\my-component\views\ view.php и добавляем туда код на отображение картинки
	
	и добавляем следущие параметры для отображения картинки в нашем новом блоке (My component)
	
		<?php if ( ! empty( $atts['demo_img'] ) ) {  ?> <!--demo_img ячейка в конфигурационом файле  для загрузки картинок../options.php (находиться на папку выше) -->
		
			<img src="<?php echo fw_resize( $atts['demo_img']['url'], 100, 100 ); ?>" alt="Alt"> <!--(выводим изображение  - fw_resize функция фреймворка которая выводим изображение 100/100) Выводим тело которое написано в нашей новой секции   написанное в конфигурации нашей новой секции - теперь он отображаеться на экране  -->

		<?php } ?>
	
	
	
	--------Создадим вкладку НАСТРОЙКИ ТЕМЫ ШАБЛОНА(ОБЩИЕ НАСТРОЙКИ НА ТЕМУ САЙТА - можно создать а можно и нет по усмотрению) (Можно создать эту опцию и добавить в нее любые опции с помощью Unyson) (Theme Settings) (Добавляем пунк настроки в меню Wordpress Appearance (внешний вид))
	мануал создания темы находиться по адресу http://manual.unyson.io/en/latest/options/built-in-option-types.html#text - все виды опци которые можно добавить в настроки темы (Theme Settings в пунке меню Appearance)
	
	1) Создаем папку в папке wp-content\themes\bogdan\framework-customizations папку theme/ а в этой папке папку /options а в этой папке файл settings.php
	
	И добавляем в наш Settings.php следущее
		//добавили опции настройки - НАЗВАНИЕ ПОЛЯ + wp-editor добавили можно что угодно добавить + цвет фона можно выбирать 
		у нас появилась в Appearance -> Theme Settings и в этот пунк меню мы добавили наши ОПЦИИ в файле Settings
		<?php if (!defined('FW')) {
			die('Forbidden');
		}
		$options = array(
			  'header text'	=> array(	//абсалютно любое название может быть //Эта массив с настройками на допавления поля в Theme Setting для написания названий
				'type'  => 'text',
				'value' => 'default value',
				'attr'  => array( 'class' => 'custom-class', 'data-foo' => 'bar' ),
				'label' => __('Header text', 'fw'), //название поля добавления текста
				'desc'  => __('Description', 'fw'),
				'help'  => __('Help tip', 'fw'),
			),
			  'footer_text' => array(   // название может быть любое template_edit /Добавили элемент wp-editor который позволяеть много чего добавить в элементе Appearance -> Theme Settings
				'type'  => 'wp-editor',
				'teeny' => true,
				'reinit'=> true,
				'label' => __( 'Footer Text', 'fw' ),	//название поля в котором будет вводить данные в настройках Appearance -> Theme Settings  
				'desc'  => __( 'Enter some content for this texblock', 'fw' )
			),
			  'bg-color' => array(					//Добавили опцию добавлению Цвета фона
				'type'  => 'color-picker',
				'value' => '#FF0000',
				'attr'  => array( 'class' => 'custom-class', 'data-foo' => 'bar' ),
				// palette colors array
				'palettes' => array( '#ba4e4e', '#0ce9ed', '#941940' ),
				'label' => __('bg-color', 'fw'),	//название поля опции которое добавили
				'desc'  => __('Description', 'fw'),
				'help'  => __('Help tip', 'fw'),
			),

		);
	2) А теперь выведем информацию о нашим ОПЦИЯХ НАСТРОЙКИ ТЕМЫ у нас на странице 
	Добивим в файл wp-content\themes\bogdan / header.php такие строки по выводу массивов с настройками из файла settings.php который находиться в wp-content\themes\bogdan\framework-customizations\theme\options \settings.php
		B вот теперь НА НАШЕЙ СТРАНИЦЕ в месте где мы указали выведяться надписи с ОПЦИЯМИ настройки нашей темы (КОТОРОЕ МЫ УКАЗАЛИ ДЛЯ ПРИМЕРА)
		<strong><?php echo fw_get_db_settings_option('header_text'); ?></strong>  <!-- (выводит значение опции) (fw_get_db_settings_option HELPER фреймворка Unyson) наш option из файла settings.php выводим значение массива header_text значение ['value'] это значение сохранненого параметра настройки   -->
		<strong><?php echo fw_get_db_settings_option('footer_text'); ?></strong>  <!--выводим содержимое footer_text из файла settings.php -->
		<strong><?php echo fw_get_db_settings_option('bg-color'); ?></strong>     <!--выводим содержимое опции bg-color из файла settings.php -->
	

		----------
		----------
		ДОБАВЛЕНИЕ ДОПОЛНИТЕЛЬНЫЕ НАСТРОЙКИ В МЕНЮ worldpress Pages в нашем слуае дополнительно меню настроек будет распологаться справо с снизу как мы указали в файле page.php в папке wp-content\themes\bogdan\framework-customizations\theme\options\posts \page.php
		
	1) Создадим новую папку wp-content\themes\bogdan\framework-customizations\theme\options\ папка posts\ и в ней создадим файл page.php
	
	содержимое page.php
	
		<?php if (!defined('FW')) {
			die('Forbidden');
		}

		$options = array(
			array(
				'type'    => 'box',
				'context' => 'side',                //Настройка side поозволяет расположить 'box' с боку с правой стороны экрана в панеле Page
				'options' => array(
					'post_edit_box' => array(		//придумали название post_edit_box
						'type'  => 'wp-editor',		//Добаляем окно wp-editor бдет расположено справа снизу в меню Page wordpress
						'teeny' => true,
						'reinit'=> true,
						'label' => __( 'Дополнительное описание', 'fw' ),	//придумали название ОПЦИИ
						'desc'  => __( 'Enter some content for this texblock', 'fw' )
					),
				)
			)
		);
			
			