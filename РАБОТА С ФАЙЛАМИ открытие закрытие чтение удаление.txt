file_put_contents - записывает в файл анформацию (пример file_put_contents('./log/mysql.log',strip_tags($query)."\n\n",FILE_APPEND)); - FILE_APPEND - Дописать файл

file_get_contents - возвращает содержание файл указать путь к файлу $file = file_get_contents ('./log/mysql.log');


---------------------РАБОТА С ФАЙЛАМИ (Альтернативный источник хранения информации как и БД)
Используються в небольших приложениях. Приимущество это простото и выгрышь в скорости.
3 простые действия Кликнуть по нему Прочитать инфо и Закрыть фаил .
С базами данных действий больше (поэтомк работает медленнее).
При переходе на другой сервер мы просто копируем фаил и встувляем его куда нужно.
С БД нада делать дамб базы и переливать на другой сервер.
 resource fopen ( string $filename , string $mode [, bool $use_include_path = false [, resource $context ]] ) - открыть файл
 ---resource - указатель на открытый фаил
 
 <?php
$str = "Строка"; // обычная переменная с простым словом
$handle = fopen("file.txt", "w"); //w это указатель на действие с файлом их существует много (fopen открывает фаил) если вместо (w) поставим (a) то в файл можно будет жописивыть инфо без стирания.
                 //между созданным файлом и закрытым файлом можно производить монипуляции с файлом
fwrite($handle, $str); // fwrite записывает в переменную  $handle с файлом file то что есть в переменной $str
fclose($handle); //- fclose() закрывает фаил с указанием переменной открытия файла
?>
 дозаписывать в файл инфо при обновлении страници  ----ЗАПИСЬ В ФАЙЛ
 <?php
$str = "Строка\r\n"; // обычная переменная с простым словом r\n\ если в созданом файле стоит установка на дозаписывание инфы то это делает записи с новой строки  
$handle = fopen("file.txt", "a"); //w это указатель на действие с файлом их существует много (fopen открывает фаил)
                 //между созданным файлом и закрытым файлом можно производить монипуляции с файлом
fwrite($handle, $str); // fwrite записывает в переменную  $handle с файлом file то что есть в переменной $str
fclose($handle); //- fclose() закрывает фаил с указанием переменной открытия файла
?>
 -------ЕЩЕ ВАРИАНТ ЗАПИСИ В ФАЙЛ
 <?php
$str = "Строка\r\n"; 
$handle = fopen("file.txt", "a"); 
if(is_resource($handle)){ // если resourse (ресурс ) то что находиться в $handle
	if(fwrite($handle, $str)){ //если выводит содержимое $str а сохраняеться в переменнй  $handel
		echo "записано!"; // то пишем на экране записано
	}
fclose($handle); 
}
?>

--------------------------ЧТЕНИЕ ФАЙЛА
если знаем размер файла
<?php 
$handle = fopen("file.txt", "r"); //режим чтения файла 
                
echo fread($handle, 34); // функция для чтения файла ( указатель на файл и сколько байт необходимо прочитать) fread - фаил читаеться в одну строку
fclose($handle); 
?>

если не знаем размер файла нада использовать функцию filesize и выводит все содержимое файла

<?php 
$handle = fopen("file.txt", "r"); //режим чтения файла 
                
echo fread($handle, filesize("file.txt")); // - filesize показывает размер файла file.php если мы не знаем его размер и выводит все содержимое файла
fclose($handle); 
?>

Файлы для чтения и записи можно заменить ФУНКЦИЕЙ для чтения и для ЗАПИСИ

<?php 
$handle = fopen("file.txt", "r");
                
/*$str = fread($handle, filesize("file.txt")); 
echo $str;*/

$str = fgets($handle); // функция fgets читает файл по строкам сколько раз ее вызвать по отношению к файлу столько строк она выведет ( например если в файле txt. 3 строки нада функцию вызывать 3 раза чтобы вызвать все 3 строки)
echo $str;
$str = fgets($handle);
echo $str;
$str = fgets($handle);
echo $str;
fclose($handle); 
?>

еще один способ вывести все содержимое файла
<?php 
$handle = fopen("file.txt", "r");
                
/*$str = fread($handle, filesize("file.txt")); 
echo $str;*/
while(!feof($handle)){     //feof показывает достигнут ли конец файла знак ! (не ) показывает если не достиг конца файла то выводим следущее
 $str = fgets($handle);
 echo $str;
}
fclose($handle); 
?>

--------------ЗАТИРАНИЕ ФАЙЛА функция flock
скрипт вызывает файл а потом вызываеться затирание что-бы никто другой не мог ничего делать с этим файлом( что-бы 2 пользователя одновременно не пользывались файлом)


<?php
$str = "Строк888887а\r\n"; 
$handle = fopen("file.txt", "a");
flock($handle, LOCK_EX);                 // существует 3 вида запирания LOCK_SH LOCK_EX LOCK_UN        LOCK_EX - заблокировали на одновременный доступ
if(is_resource($handle)){
 if (fwrite($handle, $str)){
echo "записано";
}}
flock($handle, LOCK_UN);   // LOCK_UN разблокировали
fclose($handle); 
?>


______----------------ПРЯМАЯ РАБОТА С ФАЙЛАМИ
Открытие и закрытие файла делаеться за нас 
ПРочитать файл file_get_content

------------ЧТЕНИЕ
<?php
$read = file_get_contents("file.txt"); //функция читает все содержимое файла
echo "<pre>".$read."</pre>";           // выводим содержимое файла в читабельном виде
?>

<?php
//$read = file_get_contents("file.txt"); 
$read = file("file.txt"); // содержимое файла превращает в массив
echo "<pre>";     // для улучьшения читабельности на экране
print_r ($read);          // выводим массив на экран  
echo "</pre>";
?>

-----------ДЛЯ ЗАПИСИ ИНФОРМАЦИИ В ФАЙЛ

<?php
file_put_contents("file.txr", "Строка 10"); // функция записівает в файл инфо ( в какой фаил, и что записываем) если в файле уже что-то біло оно удаляеться автоматически
?>


<?php
file_put_contents("file.txt", "Строка 10\r\n", FILE_APPEND); // FILE_APPEND  позволяет записывать в файл новые данные без потери старых - начинает писать с новой строки файла а \r\n при каждом запуске скрипта запись делает с новой строки
?>


Запускаем запись определенной фразу 10 раз в файл
<?php
for ($i = 1; $i <= 10; $i++){
file_put_contents("file.txt", "Строка $i\r\n", FILE_APPEND);
}
?>


---------------УДАЛЕНИЕ ФАЙЛОВ


<?php
if(unlink("file.txt")){   //unlinck удаляет фаил
	echo "файл удален";   // если файл удален то выводит надпись
}
?>




---------------ПОСМОТРЕТЬ СОДЕРЖИМОЕ ОПРЕДЕЛЕНОЙ ПАПКИ НА ЭКРАНЕ 
				<?php
    
					$dir ='.';
					$file = array_slice(scandir($dir),2);
					echo "<pre>";
					print_r ($file);
					echo "</pre>";
					?>


-------------------------------------ПОЛЕЗНЫЕ ФУНКЦИИ ДЛЯ РАБОТЫ С ФАЙЛАМИ


 - Файл открываем
 - Изменили
 - Закрыли




file_exists("test.txt") - существует ли файл

filesize("test.txt") - узнаем размер файла

fileatime("test.txt") - дата последнего обращения к файлу

filemtime("test.txt") - дата изменения файла

filectime("test.txt") - дата создания файла (Windows)

-----------
fopen - открыть файл имеет кучю параметров как имено открывать

	$f = fopen("test.txt", "w+") or die("Ошибка");
	$f = fopen("http://www.you_domain/test.txt","r");
	$f = fopen("http://ftp.you_domain/test.txt","r");	
	fclose($f)  // закрываем файл
-----------

fread - читаем файл

		echo fread($f, 5); - считываем первые 5 символов в файле
		что-бы прочитать полностью файл используем 2 способа
		fread ($f, 1024); - либо вводим число заведома больше чем сам файл
		fread ($f, filesize("data.txt")); - либо читаем все с помощью функции filesize
		
		echo fgets($f); - зачитывает файл по одно строке с каждым вызовом
		
		fgetss - Прочитает строку и отбросит HTML теги
		echo fgetss($f,255);
		echo fgetss($f,255,"<br>"); -- так вырежет все теги HTML кроме <br>
		echo fgetss($f,255,"<br><a>"); - так оставит и <br> и <a>
		
		echo fgetc($f); - считывает 1 символ из файла если вызвать 2 раза подряд прочитает 2 символа и так далие
		
---Запись в файл
	
	fwrite - запись в файл
	fputs  - тоже самое
	----
	пример
	$f = fopen("data.txt","a+") or die("Error");
	fputs($f,"\nTEST"); //\n - нада что-бы слово записалось с новой строки,  запишет слово в зависимости от того какой режим будет стоять в fopen a+ или a или много других
	fclose($f);
	----
	
	fseek (int f, int offset [, int whence])
		offset - количество символов н которое нужно передвигаться
		whence: // одна из 3-х констант указаных ниже
		SEEK_SET-	 движение начинаеться с начала файла
		SEEK_CUR - движение идет от текущей позиции
		SEEK_END - движение идет от конца файла
		
		пример читаем последние 10 знаков
		fseek($f, -10, SEEK_END);
		$s = fread($f,10);
	ftell - // помогает узнать где сейчас находиться курсор 
		$pos = ftell($f);
	rewind($f) //сброс курсора в начало строки	
	
	feof($f) - показывает достигли мы конца файла или нет TRUE возвращает если дошли до конца файла
		пример if(feof($f)){
					echo 'чтение файла завершено';
					} 
					
file - получаем содержимое файла в виде массива
	<?php
	$arr = file("data.txt");
	print_r ($arr);           // каждая строка появилась в своей ячейке
	?>		

file_get_contents($f)         //чтение файла


file_put_contents              // запись в файл	
	file_put_contents("data.txt","\nLine Seven",FILE_APPEND); //\n - с новой строки добавляет слово FILE_APPEND говорит что мы дописываем файл если его не указать то все сотрется и наша запись добавиться
    // Если такого файла нет в который мы добавляем файл то ПХП пытаеться его создать

copy - копирование файла

rename - переименование файла
	rename("folder1/test.txt","folder2/test.txt"); - был folder1 а стал folder2

unlink - удаление файла	


-----------------ПРИМЕР ГОСТЕВОЙ КНИГИ 

				<body>
				<?php
				define("USERS_LOG","users.log");         //создадим константу в которой будем хранить записи
				if(isset($_POST['submit'])){  // проверяем приходили нам даные из формы или нет
					$fn = trim(strip_tags($_POST["fname"]));
					$ln = trim(strip_tags($_POST["lname"]));
					$user = "$fn $ln\n";                //\n записывает с новой строки
					file_put_contents(USERS_LOG,$user,FILE_APPEND); // помещаем содержимое переменных в файл
					//header("Location: test.php");  //переадресация на эту же страницу что-бы не накидали нам лишнего через F5
					//exit;
				}
				if(file_exists(USERS_LOG)){    // проверка если файл существует то выполняем действие
					$users = file(USERS_LOG);  //зачитываем файл
					if(is_array($users)){
					   // $users = array_pop($users);
						$users = array_reverse($users); // переварачиваем массив наоборот что-бы выводить масив с конца
						echo "<ol>";                 //выводим что-бы списки номеровались
						foreach($users as $user){
						   // $user = array_pop($user);
							echo "<li>";
							echo $user;
							echo "</li>";
						}
						echo "</ol>";
					}
				}
				?>
				<form style="width: 220px" method="post" action="">
					<pre>
					<input type="text" name="fname">
					<textarea name="lname" rows="5" cols="18"></textarea>
					<input type="submit" name="submit">
					</pre>
				</form>
				

				
				
------------------------------------------------------СОЗДАНИЕ ДИРЕКТОРИЙ
Директории и манипуляции
(".") - имя текущей диретории

mkdir - создание директорий

rmdir - удаление директории (удалчеться только если она пустая)

opendir - открывает директорию
	$dir = opendir(string dirname)
	
readdir - читаем директорию ( будет возвращать имя либо файла либо папки)
	$name = readdir($dir)
	Проверить папка это или файл можно с помощью функии ниже
	is_file(name) - это файл
	is_dir(name)  - это директория

closedir($dir) - закрываем директорию как закончили с ней работать

GetCWD - показывает полный путь к указаному файлу


----------пример ВЫВОДИМ НА ЭКРАН СОДЕРЖИМОЕ ДИРЕКТОРИИ то что папи выводим жирным что файлы обычным цветом

			<?php //зачитываем все что в папке с помошью цикла
			$d = opendir(".");
			while($name = readdir($d)){
				if($name=="." or $name=="..") { // это условие уберает 2 папки сверху с . и вдумя .. точками без этого условия они будут выводиться
				continue;
				}
				if(is_dir($name)){
					echo "<b>[$name]</b><br>"; //жирным тегом будет выводить директории [] написали что-бы папка была обведена в квадратные скобки
				}else echo "$name<br>";        // обычным текстом будет выводить файлы
			}
			closedir($d);
			?>
			
			ТОЖЕ САМОЕ СДЕЛАЕТ ФУНКЦИЯ scandir - вернет массив с тем что есть в директории
			
scandir - вернет массив с тем что находиться в папке 
		<?php
		$files = scandir(".");
		print_r ($files);    //покажет содержимое папки в массиве
		exit();
		?>
		----Так покажет в обратном порядке что находиться в папке
		<?php //зачитываем все что в папке с помошью цикла
		$d = scandir(".",1);
		echo "<pre>";
		print_r ($d);
		echo "<pre>";
		?>
		
----------------ВЫВЕДЕМ ДЕРЕВО ДИРЕКТОРИИ С ОТОБРАЖЕНИЕ СОДЕРЖИМОГО ПАКОК ( сделаем рекурсию на директорию)

		<?php
		function dirs($dir){             //функция dirs делает рекурсию на директорию
			$d = opendir($dir);
			while ($name = readdir($d)) {
				if ($name == "." or $name == "..") { //(в данной рекурсии это условие обязательно) это условие уберает 2 папки сверху с . и вдумя .. точками без этого условия они будут выводиться
					continue;
				}
				if (is_dir($name)) {
					echo "<b>[$name]</b><br>"; //жирным тегом будет выводить директории [] написали что-бы папка была обведена в квадратные скобки
					dirs($dir."/$name");
				} else echo "$name<br>";        // обычным текстом будет выводить файлы
			}
			closedir($d);
		}
		dirs("."); //вызываем с текущей папки в которой нахоиться сам файл (в $dir передаем значение текущей папки (".")
		?>
		
		 -------------ТАК ВЫВОДИ дерево ДИРЕКТОРИИ БОЛЕЕ КРАСИВО

			<?php
			function dirs($dir, $tab){
				$d = opendir($dir);
				while ($name = readdir($d)) {
					if ($name == "." or $name == "..") { //(в данной рекурсии это условие обязательно) это условие уберает 2 папки сверху с . и вдумя .. точками без этого условия они будут выводиться
						continue;
					}
					if (is_dir($name)) {
						echo "<b>".$tab."[$name]</b><br>"; //жирным тегом будет выводить директории [] написали что-бы папка была обведена в квадратные скобки
						$tab .= '-';   //.= позволяет с каждой итерацией добавлять значение $tab таким же
						dirs($dir."/$name",$tab);
					} else echo "$tab$name<br>";        // обычным текстом будет выводить файлы
				}
				closedir($d);
			}
			dirs(".", ""); //вызываем с текущей папки в которой нахоиться сам файл (в $dir передаем значение текущей папки (".")
			?>
			
			
---------------------------------------------------ЗАГРУЗКА ФАЙЛОВ НА СЕРВЕР

Для этого нада ознакомиться с настройками загрузки файлов PHP.ini (PHP)

1)file_uploads (on|off)  //если он выключен то файлы не загружаються

2)upload_tmp_dir         // временая папка для загрузки файла (при загрузке все фацлы попадают сюда)

3)upload_max_filesize (default = 2 Mb)  // максимальный размер загружаемого файла и post_max_size (размер отправки через форму - должен быть больше чем file max size)

ВСЯ Изнормация которая прикодит при загрузке файла попадет в массив $_FILES
$_FILES['userfile']
Первая ячейка это поле через которое отправили файл и в ней лежит еще 5 ячеек с характеристиками файла
$_FILES['userfile']['name']      //имя файла
$_FILES['userfile']['tmp_name'] //временный путь где лежит файл и временное имя файла
$_FILES['userfile']['size']     // размер
$_FILES['userfile']['type']     // тип
$_FILES['userfile']['error']     // ошибки показивает


---Простая загрузка
<form action ="test.php" method="post" enctype="multipart/form-data">
 <input type="file" name="uf">
<input type="submit">
</form>

-----ЧТО_БЫ ЗАГРУЖАТЬ ФИКСИРОВАНЫЙ РАЗМЕР КАРТИНОК например больше определенного размера не заргужать
Нада в форме создать скрытое поле которое в себе будет нести такое значение
<input type="hidden" name="MAX_FILE_SIZE" value="51200"> например и будет отсылать файлы небольше этого размера
-----ПРИМЕР отправки фиксированого размера ( ЭТОТ СПОСОБ НЕ НАДЕЖНЫЙ)
<form action ="test.php" method="post" enctype="multipart/form-data">
<input type="hidden" name="MAX_FILE_SIZE" value="51200">
 <input type="file" name="uf">
<input type="submit">
</form>


imagecreatefromjpeg - создает новое изображение из файла или URL

move_uploaded_file - перемещаем файл из временной папки в указаное место на сервере
	$tmp = $_FILES['userfile']['tmp_name']; //после отправки файла формоей он появляетьсяв этой ячейке массива (временное хранилище)
	$name = $_FILES['userfile']['name'];    // имя файла храниться в этой ячейке массива
	move_uploaded_file($tmp,$name);  //указываем откуда и имя
	
-----------ПОЛНЫЙ ПРИМЕР ЗАГРУЗЧИ ФАЙЛОВ НА СЕРВЕР (В ПАПКУ НАПРИМЕР)

			<body>
			<?php
			// загрузка форм на сервер
			// файлы загружаються только методом POST
			// после того как файл отправили формой во временный массив $_FILES его нужно забрать к себе
			if($_FILES['uf']['error']==0) { // после отправки формой файла созданный автоматически массив $_FILE['uf']['error'] если равен 0 то ошибок при загрузке нет ['uf'] имя ячейки с которой отправляем файл
				$t = $_FILES['uf']['tmp_name']; //переменная с временным именем и место положением файла
				$n = $_FILES['uf']['name'];     // переменная с именем файла
				move_uploaded_file($t,"upload/".$n); ////вместо $n любое имя присвоить например временую метку (time()покажет не имя файла а время в которое он отправлялся)  загружаем файла в папку upload она находиться в папке с файлом этой формы
			 if(isset($_POST['submit'])){
				 echo 'файл успешно добавлен';
			 }
			}
			?>
			<form action ="test.php" method="post" enctype="multipart/form-data"> <!-- что-бы нам пришел файл нада enctype указать multipart/form-data-->
				<input type="file" name="uf">
			<input type="submit" name="submit">
			</form>
			</body>
------------------------




----------------------------------------ПРИМЕР ЗАГРУЗКА ФАЙЛОВ В ПАПКУ НА СЕРВЕР + ОТОБРАЖЕНИЕ ВСЕХ КАРТИНОК ИЗ ПАПКИ


					<body>
					<?php
					if($_FILES['uf']['error']==0) {
						$t = $_FILES['uf']['tmp_name'];
						$n = $_FILES['uf']['name'];
						$ext = substr($n,strpos($n,'.'),strlen($n)-1);//Определяем расширение файла
						$new = date("H-i-s").$ext;//Генерируем новое имя файла во избежании совпадения названий
						$return['new'] = $new;
						move_uploaded_file($t,"upload/".$new);
						if(isset($_POST['submit'])){
							echo 'файл успешно добавлен';
						}
					}
					/*$path1 = $_SERVER['DOCUMENT_ROOT'].'/bogdan/upload/'; //отображение конкретной картинки
					$images1 = scandir($path1);
					if (file_exists($path1)) {
						$path = $_SERVER['DOCUMENT_ROOT'].'/bogdan/upload/';
						$images = scandir($path);
						print_r ($images);
						echo '<img src="/bogdan/upload/' . $images[2] . '" alt="просто слово" width="300px" />';
					}*/
					$path = $_SERVER['DOCUMENT_ROOT'].'/bogdan/upload/'; // условие на отображение всех картинок
					$images = scandir($path);
					if(file_exists($path)) {
						foreach ($images as $key => $v) {
							if (stripos($v, '.jpg')) echo '<img src="/bogdan/upload/'. $v .'" width="200" height="200" />';
						}
					}
					// и так еще можно - тоже самое
					/*$dir = $_SERVER['DOCUMENT_ROOT'].'/bogdan/upload/';
					$file_display = array('jpg', 'jpeg', 'png', 'gif');
					if ( file_exists( $dir ) == false ) {
						echo 'Directory \'', $dir, '\' not found!';
					} else {
						$dir_contents = scandir( $dir );
						foreach ( $dir_contents as $file ) {
							$file_type = strtolower( end( explode('.', $file ) ) ); //вытаскиваем значени переменной после точки
							print_r ($file_type);
							if ( ($file !== '.') && ($file !== '..') && (in_array( $file_type, $file_display)) ) {
								echo '<img src="/bogdan/upload/'.$file.'"  alt="', $file, '"/>';
								break;
							}
						}
					}*/

					?>
					<div class="col-xs-4">
						<form action ="test.php" method="post" enctype="multipart/form-data"> <!-- что-бы нам пришел файл нада enctype указать multipart/form-data-->
							<input type="file" name="uf">
							<input type="submit" name="submit">
						</form>
					</div>
					</body>


---------------------------------------------------------



-------------------------------------------ЗАГРУЗКА НЕСКОЛЬКИХ ФАЙЛОВ НА СЕРВЕР (Что-то типа того)
форма

<form action="add.php" method="post" ENCTYPE="multipart/form-data">
        <label>
          Файл изображения №1: <input type="file" name="file[]"><br>
          Файл изображения №2: <input type="file" name="file[]"><br>
    </label>
        </form>
 



    скопировать код в буфер обмена
    foreach($_FILES['file']['name'] as $k=>$f) {
      if (!$_FILES['file']['error'][$k]) {
        if (is_uploaded_file($_FILES['file']['tmp_name'][$k])) {
          if (move_uploaded_file($_FILES['file']['tmp_name'][$k], "../img/cars/".$_FILES['file']['name'][$k])) {
            echo 'Файл: '.$_FILES['file']['name'][$k].' загружен.<br />';
          }
        }
      }
    }
    $img1 = $_FILES['file']['name'][0];
    $img2 = $_FILES['file']['name'][1];
     

